'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactJplayerUtils = require('react-jplayer-utils');

var _actions = require('../../actions/actions');

var _bar = require('../bar');

var _bar2 = _interopRequireDefault(_bar);

var _seekBar = require('./seekBar');

var _seekBar2 = _interopRequireDefault(_seekBar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var mapStateToProps = function mapStateToProps(_ref2, _ref) {
  var jPlayers = _ref2.jPlayers;

  var id = _ref.id,
      children = _ref.children,
      attributes = _objectWithoutProperties(_ref, ['id', 'children']);

  return {
    seekPercent: jPlayers[id].seekPercent,
    movePlayHead: function movePlayHead(bar, dispatch, e) {
      var offset = (0, _reactJplayerUtils.getElementOffset)(bar);
      var x = e.pageX - offset.left;
      var w = bar.getBoundingClientRect().width;
      var percentage = 100 * (x / w);

      dispatch((0, _actions.setPlayHead)(id, percentage));
    },
    children: children,
    attributes: attributes
  };
};

var mergeProps = function mergeProps(_ref3, _ref4) {
  var movePlayHead = _ref3.movePlayHead,
      seekPercent = _ref3.seekPercent,
      children = _ref3.children,
      attributes = _ref3.attributes;
  var dispatch = _ref4.dispatch;
  return {
    onClick: function onClick(bar, e) {
      return movePlayHead(bar, dispatch, e);
    },
    onTouchMove: function onTouchMove(bar, e) {
      // Stop page scrolling
      e.preventDefault();

      movePlayHead(bar, dispatch, e.touches[0]);
    },
    seekPercent: seekPercent,
    children: children,
    attributes: attributes
  };
};

var SeekBarContainer = function SeekBarContainer(_ref5) {
  var onClick = _ref5.onClick,
      onTouchMove = _ref5.onTouchMove,
      seekPercent = _ref5.seekPercent,
      children = _ref5.children,
      attributes = _ref5.attributes;
  return _react2.default.createElement(
    _bar2.default,
    { clickMoveBar: onClick, touchMoveBar: onTouchMove },
    _react2.default.createElement(
      _seekBar2.default,
      _extends({ seekPercent: seekPercent }, attributes),
      children
    )
  );
};

SeekBarContainer.defaultProps = {
  children: null
};

SeekBarContainer.propTypes = {
  children: _propTypes2.default.node,
  attributes: _propTypes2.default.object.isRequired,
  onClick: _propTypes2.default.func.isRequired,
  onTouchMove: _propTypes2.default.func.isRequired,
  seekPercent: _propTypes2.default.number.isRequired
};

exports.default = (0, _reactJplayerUtils.connectWithId)(mapStateToProps, null, mergeProps)(SeekBarContainer);
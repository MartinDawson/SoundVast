# source: http://localhost:8080/graphql
# timestamp: Sat Oct 21 2017 10:46:33 GMT+0200 (W. Europe Daylight Time)

interface Audio {
  id: ID
  name: String!

  # The poster image for the audio
  coverImageUrl: String!

  # The user who uploaded the audio
  user: User

  # The genre the audio belongs to
  genre: Genre

  # The ratings that have been applied by users to this audio
  ratings: [Rating]
}

# The `Date` scalar type represents a timestamp provided in UTC. `Date` expects
# timestamps to be formatted in accordance with the
# [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
scalar Date

scalar Decimal

type Genre {
  id: ID
  name: String!

  # The type of category the genre belongs to, e.g. Music, Radio etc
  type: String!
}

type Mutation {
  saveSong(song: SongInput!): Song
}

type Query {
  song(id: String): Song
  songs: [Song]
}

type Rating {
  id: ID

  # Whether the user has liked the audio or not
  liked: Boolean!

  # The user that rated the audio
  user: User

  # The audio that was rated by the user
  audio: Audio
}

type Song implements Audio {
  id: ID
  name: String!

  # The poster image for the song
  coverImageUrl: String!
  artist: String

  # The user who uploaded the song
  user: User

  # The genre the song belongs to
  genre: Genre

  # The ratings that have been applied by users to this song
  ratings: [Rating]
}

input SongInput {
  name: String!
  artist: String
  coverImageUrl: String!
  genreId: Int
  userId: String!
}

type User {
  id: ID
  userName: String!
  email: String!
  emailConfirmed: Boolean!
}
